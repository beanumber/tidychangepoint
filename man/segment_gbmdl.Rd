% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cpt_gbmdl_algorithm_alt.R,
%   R/segment_gbmdl_algorithm.R
\name{segment_gbmdl_alt}
\alias{segment_gbmdl_alt}
\alias{evolve_alt}
\alias{segment_gbmdl}
\title{Alternate implementation of Genetic BMDL algorithm}
\usage{
segment_gbmdl_alt(
  x,
  destdir = tempdir(),
  show_progress_bar = TRUE,
  write_rda = FALSE
)

evolve_alt(x, cpt_list)

segment_gbmdl(
  x,
  num_generations = 50,
  destdir = tempdir(),
  show_progress_bar = TRUE,
  write_rda = FALSE
)
}
\arguments{
\item{x}{a vector that can be coerced into a \code{ts}}

\item{destdir}{Directory to stare files}

\item{show_progress_bar}{show the progress bar?}

\item{write_rda}{Write the data to \code{destdir}?}
}
\value{
A \code{cpt_gbmdl} object
}
\description{
Alternate implementation of Genetic BMDL algorithm

Algoritmo gen√©tico de Bayesian MDL a un paso
}
\examples{
\dontrun{
segment_gbmdl_alt(DataCPSim)
}
\dontrun{
mat_cp <- lista_AG$segmenter$lista_AG_BMDL$mat_cp

Bayesaian_MDL_k_cp(mat_cp, exceedances(DataCPSim))
basket <- sim_k_cp_BMDL(DataCPSim, 50, max_num_cp = 20) |>
  mat_cp_2_tbl() |>
  dplyr::pull(tau)
evolve_alt(DataCPSim, basket) |>
  lapply(bmdl, x = DataCPSim)
  }
\dontrun{
x <- segment_gbmdl(DataCPSim, num_generations = 10)
y <- segment_gbmdl(rlnorm_ts_1)
}

}
