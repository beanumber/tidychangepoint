% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{pad_tau}
\alias{pad_tau}
\alias{unpad_tau}
\alias{is_valid_tau}
\alias{binary2tau}
\alias{tau2binary}
\alias{tau2time}
\alias{time2tau}
\alias{cut_inclusive}
\alias{test_set}
\alias{split_by_tau}
\alias{deg_free}
\title{Utility functions}
\usage{
pad_tau(tau, n)

unpad_tau(padded_tau)

is_valid_tau(tau, n)

binary2tau(x)

tau2binary(tau, n)

tau2time(tau, index)

time2tau(cpts, index)

cut_inclusive(x, tau)

test_set(n = 1, sd = 1, seed = NULL)

split_by_tau(x, tau)

deg_free(x)
}
\arguments{
\item{tau}{a numeric vector of changepoints}

\item{n}{Number of changepoints}

\item{padded_tau}{Output from \code{\link[=pad_tau]{pad_tau()}}}

\item{x}{A numeric vector}

\item{sd}{Standard deviation passed to \code{\link[stats:Normal]{stats::rnorm()}}}

\item{seed}{Value passed to \code{\link[base:Random]{base::set.seed()}}}
}
\description{
Utility functions
}
\examples{
is_valid_tau(0, length(DataCPSim))
is_valid_tau(1, length(DataCPSim))
is_valid_tau(826, length(DataCPSim))
is_valid_tau(1096, length(DataCPSim))
is_valid_tau(1097, length(DataCPSim))

binary2tau(c(0, 0, 1, 0, 1))
binary2tau(round(runif(10)))

tau2binary(c(7, 17), n = 24)
tau2binary(binary2tau(c(0, 0, 1, 1, 0, 1)), n = 6)
tau2time(c(42, 81, 330), index = lubridate::year(time(CET)))
time2tau(c(1700, 1739, 1988), index = lubridate::year(time(CET)))
split_by_tau(DataCPSim, c(365, 826))
deg_free(segment(DataCPSim))
}
